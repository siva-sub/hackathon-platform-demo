steps:
  # Build the container image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/hackathon-platform:$COMMIT_SHA', '.']

  # Push the container image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/hackathon-platform:$COMMIT_SHA']

  # Deploy container image to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'hackathon-platform'
      - '--image'
      - 'gcr.io/$PROJECT_ID/hackathon-platform:$COMMIT_SHA'
      - '--region'
      - 'us-central1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--port'
      - '8080'
      - '--memory'
      - '2Gi'
      - '--cpu'
      - '2'
      - '--max-instances'
      - '100'
      - '--set-env-vars'
      - 'NODE_ENV=production,GEMINI_API_KEY=$$GEMINI_API_KEY,SMTP_USERNAME=$$SMTP_USERNAME,SMTP_TOKEN=$$SMTP_TOKEN,SMTP_SERVER=$$SMTP_SERVER,SMTP_PORT=$$SMTP_PORT'
    secretEnv: ['GEMINI_API_KEY', 'SMTP_USERNAME', 'SMTP_TOKEN', 'SMTP_SERVER', 'SMTP_PORT']

# Store images in Google Container Registry
images:
  - 'gcr.io/$PROJECT_ID/hackathon-platform:$COMMIT_SHA'

# Define secrets
availableSecrets:
  secretManager:
    - versionName: projects/$PROJECT_ID/secrets/gemini-api-key/versions/latest
      env: 'GEMINI_API_KEY'
    - versionName: projects/$PROJECT_ID/secrets/smtp-username/versions/latest
      env: 'SMTP_USERNAME'
    - versionName: projects/$PROJECT_ID/secrets/smtp-token/versions/latest
      env: 'SMTP_TOKEN'
    - versionName: projects/$PROJECT_ID/secrets/smtp-server/versions/latest
      env: 'SMTP_SERVER'
    - versionName: projects/$PROJECT_ID/secrets/smtp-port/versions/latest
      env: 'SMTP_PORT'

# Build options
options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'
